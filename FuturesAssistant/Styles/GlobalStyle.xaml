<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--主题颜色-->
    <Color x:Key="ThemeColor">#FFD5D891</Color>
    <Color x:Key="ThemeColor1">#FFC2C588</Color>
    <Color x:Key="ThemeColor2">#FFD8DAA5</Color>
    <Color x:Key="ThemeColor3">PaleGoldenrod</Color>

    <SolidColorBrush x:Key="Separator_Color" Color="#FF998B00"/>



    <!--DataGrid-->
    <Style TargetType="Separator">
        <!--拖动改变单元格大小-->
        <Setter Property="Foreground" Value="{DynamicResource ThemeColor}"/>
    </Style>

    <!--DataGrid-->
    <Style TargetType="DataGrid">
        <!--拖动改变单元格大小-->
        <Setter Property="CanUserResizeColumns" Value="false"/>
        <!--网格线颜色-->
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="AlternatingRowBackground" Value="Gainsboro" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="Background" Value="White" />
        <Setter Property="HeadersVisibility" Value="Column" />
    </Style>
    <!--标题栏样式-->
    <Style  TargetType="DataGridColumnHeader" >
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <!--行样式-->
    <Style  TargetType="DataGridRow">
        <Style.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="AliceBlue"/>
            </Trigger>-->
            <!--<Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Black"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <!--单元格样式-->
    <Style TargetType="DataGridCell">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <!--<Setter Property="HorizontalContentAlignment" Value="Right"/>-->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="tabControl_Theme_Color" Color="{DynamicResource ThemeColor}"></SolidColorBrush>
    <!--TabControl-->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="12px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{StaticResource tabControl_Theme_Color}"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <!--TabItem-->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Name="bd"
                            BorderThickness="1,1,1,0"
                            CornerRadius="2,2,0,0"
                            Margin="0,3,1,0"
                            Background="{DynamicResource tabControl_Theme_Color}" 
                            BorderBrush="White">
                        <ContentPresenter ContentSource="Header" Margin="10,3"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="White" />
                            <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource tabControl_Theme_Color}" />
                            <Setter TargetName="bd" Property="Margin" Value="0,0,1,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Margin" Value="0,0,1,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--主窗口TabControl-->
    <Style BasedOn="{StaticResource {x:Type TabControl}}" x:Key="MainTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Bottom"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!--主窗口TabItem-->
    <Style x:Key="MainTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="65"/>
        <Setter Property="FontSize" Value="15px"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="bdMainTabItem"
                            BorderThickness="1"
                            CornerRadius="3"
                            Margin="5" Background="Transparent" BorderBrush="White">
                        <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bdMainTabItem" Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bdMainTabItem" Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Header">
            <Setter.Value>
                <TextBlock HorizontalAlignment="Center"  VerticalAlignment="Center">
                    <ContentPresenter  ContentSource="Header"/>
                </TextBlock>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Button-->
    <Style x:Key="mark" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="19px"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="9px"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="bd" Cursor="Hand" 
                                CornerRadius="1" BorderThickness="0" Background="Gray">
                            <ContentPresenter Name="bdContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Button-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--<Setter Property="FontFamily" Value="微软雅黑"/>-->
        <Setter Property="FontSize" Value="12px"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="bd" Cursor="Hand" 
                                CornerRadius="1" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
                            </Border.BorderBrush>
                            <ContentPresenter Name="bdContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" >
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="bd" Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" >
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="bd" Property="Cursor" Value="Hand"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bd" Property="Background" Value="White"/>
                            <Setter TargetName="bd" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 小工具Button-->
    <Style x:Key="ToolsButtonStyle"  TargetType="{x:Type Button}">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5,5"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="bd" Cursor="Hand" 
                                CornerRadius="2" BorderThickness="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
                            </Border.BorderBrush>
                            <ContentPresenter Name="bdContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" >
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="bd" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="bd" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bd" Property="Background" Value="White"/>
                            <Setter TargetName="bd" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 主菜单大Button-->
    <Style x:Key="BigButtonStyle"  TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=ToolsButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="bd" Cursor="Hand" 
                                CornerRadius="2" BorderThickness="1" Background="Transparent" BorderBrush="White">
                            <ContentPresenter Name="bdContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" Value="White" />
                            <Setter TargetName="bd" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="bd" Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--登陆对话框右上角关闭按钮-->
    <Style x:Key="SmallCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <!--设置样式 -->
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Width="18" Height="18"  Fill="Black"></Ellipse>
                        <Grid>
                            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5">
                                <Line StrokeThickness="2" Stroke="White" X1="0" Y1="0" X2="8" Y2="8"></Line>
                                <Line StrokeThickness="2" Stroke="White" X1="0" Y1="8" X2="8" Y2="0"></Line>
                            </Canvas>
                        </Grid>
                    </Grid>
                    <!-- 设置鼠标移到关闭按钮上的效果 -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver"  Value="True">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker-->
    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" >
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="12px"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <!--DatePickerTextBox-->
    <Style TargetType="DatePickerTextBox" >
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--GroupBox-->
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="12px"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <!--TextBlock-->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="12px"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <!--TextBox-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="12px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderThickness="1" BorderBrush="{DynamicResource tabControl_Theme_Color}">
                        <Grid x:Name="grid" Background="#FFFFFF">
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PasswrodBox-->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" Width="Auto" Height="Auto" BorderThickness="1" BorderBrush="#FFD5D891">
                        <Grid x:Name="grid" Background="#FFFFFF">
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ProgressBar-->
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ThemeColor}"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="White"/>
    </Style>

</ResourceDictionary>